// Code generated by MockGen. DO NOT EDIT.
// Source: domain/repositories/field.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"
	models "w3st/domain/models"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockFieldRepository is a mock of FieldRepository interface.
type MockFieldRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFieldRepositoryMockRecorder
}

// MockFieldRepositoryMockRecorder is the mock recorder for MockFieldRepository.
type MockFieldRepositoryMockRecorder struct {
	mock *MockFieldRepository
}

// NewMockFieldRepository creates a new mock instance.
func NewMockFieldRepository(ctrl *gomock.Controller) *MockFieldRepository {
	mock := &MockFieldRepository{ctrl: ctrl}
	mock.recorder = &MockFieldRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFieldRepository) EXPECT() *MockFieldRepositoryMockRecorder {
	return m.recorder
}

// CreateField mocks base method.
func (m *MockFieldRepository) CreateField(newField *models.FieldData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateField", newField)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateField indicates an expected call of CreateField.
func (mr *MockFieldRepositoryMockRecorder) CreateField(newField interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateField", reflect.TypeOf((*MockFieldRepository)(nil).CreateField), newField)
}

// DeleteFieldById mocks base method.
func (m *MockFieldRepository) DeleteFieldById(projectId int, fieldId uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFieldById", projectId, fieldId)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFieldById indicates an expected call of DeleteFieldById.
func (mr *MockFieldRepositoryMockRecorder) DeleteFieldById(projectId, fieldId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFieldById", reflect.TypeOf((*MockFieldRepository)(nil).DeleteFieldById), projectId, fieldId)
}

// UpdateField mocks base method.
func (m *MockFieldRepository) UpdateField(newField *models.FieldData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateField", newField)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateField indicates an expected call of UpdateField.
func (mr *MockFieldRepositoryMockRecorder) UpdateField(newField interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateField", reflect.TypeOf((*MockFieldRepository)(nil).UpdateField), newField)
}
